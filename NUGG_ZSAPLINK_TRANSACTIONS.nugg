<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZSAPLINK_TRANSACTIONS">
 <CLAS CLSNAME="ZSAPLINK_TRANSACTIONS" VERSION="1" LANGU="E" DESCRIPT="SAPLink Transaction Plugin" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZSAPLINK">
  <types CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="TY_HEADER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="22 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_header,
           tcode       TYPE tstc-tcode,
           pgmna       TYPE tstc-pgmna,
           dypno       TYPE swydynp-dynpro,
           tcode_call  TYPE tstc-tcode,
           type        TYPE c LENGTH 1,
           skip_screen TYPE c LENGTH 1,
           s_webgui    TYPE tstcc-s_webgui,
           s_win32     TYPE tstcc-s_win32,
           s_platin    TYPE tstcc-s_platin,
           masterlang  TYPE tadir-masterlang,
           ttext       TYPE tstct-ttext,
       END OF ty_header
"/>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool>
   <language SPRAS="E">
    <textElement ID="I" KEY="001" ENTRY="Unknown transaction type" LENGTH="27 "/>
   </language>
  </textPool>
  <attribute CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="C_HEX_OBJ" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;08&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="X" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="C_HEX_PAR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;02&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="X" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="C_HEX_REP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;80&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="X" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="C_HEX_TRA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;00&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="X" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZSAPLINK_TRANSACTIONS" REFCLSNAME="ZSAPLINK" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZSAPLINK_TRANSACTIONS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="CHECKEXISTS"/>
   <redefinition CLSNAME="ZSAPLINK_TRANSACTIONS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="CREATEIXMLDOCFROMOBJECT"/>
   <redefinition CLSNAME="ZSAPLINK_TRANSACTIONS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="CREATEOBJECTFROMIXMLDOC"/>
   <redefinition CLSNAME="ZSAPLINK_TRANSACTIONS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="DELETEOBJECT"/>
   <redefinition CLSNAME="ZSAPLINK_TRANSACTIONS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="GETOBJECTTYPE"/>
  </inheritance>
  <method CLSNAME="ZSAPLINK" CMPNAME="CHECKEXISTS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                         |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD checkexists.

*      Plugin created by:
*      Juan Sebastián Soto
*      sebastiansoto@freeit.com.ar

  DATA: lv_objectname TYPE tstc-tcode.

  lv_objectname = me-&gt;objname.

  CALL FUNCTION &apos;RS_TRANSACTION_CHECK&apos;
    EXPORTING
      objectname       = lv_objectname
      suppress_dialog  = abap_true
    EXCEPTIONS
      object_not_found = 1
      error_occured    = 2
      OTHERS           = 3.

  CHECK sy-subrc EQ 0.

  exists = abap_true.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="CONVERT_TSTCP_PARAM" VERSION="1" LANGU="E" DESCRIPT="Convert the TSTCP-PARAM values to SWYPARAM" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="CONVERT_TSTCP_PARAM" SCONAME="IV_PARAM" VERSION="1" LANGU="E" DESCRIPT="Parameters for transactions" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TSTCP-PARAM"/>
   <parameter CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="CONVERT_TSTCP_PARAM" SCONAME="RE_PARAM" VERSION="1" LANGU="E" DESCRIPT="Table of Name/Value Pairs for a Parameter Transaction" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SWYPARAM"/>
   <source>METHOD convert_tstcp_param.

  DATA: lt_param_list   TYPE stringtab.

  DATA: lw_param        TYPE LINE OF swyparam.

  DATA: lv_garbage      TYPE c LENGTH 1,
        lv_params       TYPE c LENGTH 240,
        lv_param_list   TYPE string.

  SPLIT iv_param AT &apos; &apos; INTO lv_garbage lv_params IN CHARACTER MODE.

  SPLIT lv_params AT &apos;;&apos; INTO TABLE lt_param_list IN CHARACTER MODE.

  LOOP AT lt_param_list INTO lv_param_list.

    CLEAR lw_param.

    SPLIT lv_param_list AT &apos;=&apos; INTO lw_param-field lw_param-value.
    APPEND lw_param TO re_param.

  ENDLOOP.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                         |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD createixmldocfromobject.

*      Plugin created by:
*      Juan Sebastián Soto
*      sebastiansoto@freeit.com.ar

  DATA: lt_tcodes         TYPE STANDARD TABLE OF tstc,
        lt_gui_attributes TYPE STANDARD TABLE OF tstcc,
        lt_params         TYPE swyparam.

  DATA: ls_header         TYPE ty_header,
        ls_tadir          TYPE tadir,
        ls_tcodes         TYPE tstc,
        ls_gui_attributes TYPE tstcc,
        ls_tstct          TYPE tstct,
        ls_tstcp          TYPE tstcp,
        ls_params         TYPE LINE OF swyparam.

  DATA: lv_transaction TYPE tstc-tcode,
        lv_object      TYPE tadir-object,
        lv_obj_name    TYPE tadir-obj_name,
        lv_message     TYPE string.

*xml nodes
  DATA: _objtype   TYPE string,
        rootnode    TYPE REF TO if_ixml_element,
        header_node TYPE REF TO if_ixml_element,
        line_node   TYPE REF TO if_ixml_element,
        rc          TYPE sysubrc.

  lv_transaction = me-&gt;objname.
  lv_obj_name    = me-&gt;objname.

  _objtype  = me-&gt;getobjecttype( ).
  lv_object = me-&gt;getobjecttype( ).

* Read Master System Data
  CALL FUNCTION &apos;RM_TADIR_READ&apos;
    EXPORTING
      p_object        = lv_object
      p_obj_name      = lv_obj_name
    IMPORTING
      e_tadir         = ls_tadir
    EXCEPTIONS
      interface_error = 1
      OTHERS          = 2.

  IF sy-subrc NE 0.
    RAISE EXCEPTION TYPE zcx_saplink
    EXPORTING
      textid = zcx_saplink=&gt;system_error.
  ENDIF.

* Read Transaction Header Data
  CALL FUNCTION &apos;RPY_TRANSACTION_READ&apos;
    EXPORTING
      transaction      = lv_transaction
    TABLES
      tcodes           = lt_tcodes
      gui_attributes   = lt_gui_attributes
    EXCEPTIONS
      permission_error = 1
      cancelled        = 2
      not_found        = 3
      object_not_found = 4
      OTHERS           = 5.

  IF sy-subrc NE 0.
    RAISE EXCEPTION TYPE zcx_saplink
    EXPORTING
      textid = zcx_saplink=&gt;system_error.
  ENDIF.

* Get Default Description
  SELECT SINGLE *
  FROM tstct
  INTO ls_tstct
  WHERE sprsl EQ ls_tadir-masterlang
    AND tcode EQ lv_transaction.

* Compile Header
  READ TABLE lt_tcodes         INTO ls_tcodes INDEX 1.
  READ TABLE lt_gui_attributes INTO ls_gui_attributes INDEX 1.

  MOVE-CORRESPONDING ls_tcodes TO ls_header.
  MOVE-CORRESPONDING ls_gui_attributes TO ls_header.
  ls_header-masterlang = ls_tadir-masterlang.
  ls_header-ttext      = ls_tstct-ttext.

  CASE ls_tcodes-cinfo.
    WHEN c_hex_tra.
      ls_header-type = &apos;D&apos;.
    WHEN c_hex_par.
      ls_header-type = &apos;P&apos;.
    WHEN c_hex_rep.
      ls_header-type = &apos;R&apos;.
    WHEN OTHERS.

      lv_message = text-001.

      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;error_message
          msg    = lv_message.

  ENDCASE.

* Read Transaction parameters if needed.
  IF ls_tcodes-cinfo EQ c_hex_par.
    SELECT SINGLE * FROM tstcp INTO ls_tstcp WHERE tcode EQ lv_transaction.

    IF ls_tstcp-param+1(1) EQ &apos;*&apos;. &quot; Do skip initial screen.
      ls_header-skip_screen = abap_true.
    ENDIF.

    lt_params = me-&gt;convert_tstcp_param( ls_tstcp-param ).

    ls_header-tcode_call = me-&gt;get_tcode_from_param( ls_tstcp-param ).

  ENDIF.

* Create parent node
  _objtype = getobjecttype( ).
  rootnode = xmldoc-&gt;create_element( _objtype ).
  setattributesfromstructure( node = rootnode structure = ls_header ).

* Create param subnode
  LOOP AT lt_params INTO ls_params.
    line_node = xmldoc-&gt;create_element( &apos;params&apos; ).
    setattributesfromstructure( node = line_node structure = ls_params ).
    rc = rootnode-&gt;append_child( line_node ).
  ENDLOOP.

*\--------------------------------------------------------------------/
  rc = xmldoc-&gt;append_child( rootnode ).
  ixmldocument = xmldoc.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                         |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD createobjectfromixmldoc.

*      Plugin created by:
*      Juan Sebastián Soto
*      sebastiansoto@freeit.com.ar

  DATA: lt_params         TYPE swyparam.

  DATA: ls_header    TYPE ty_header,
        ls_params    TYPE LINE OF swyparam.

*xml nodes
  DATA: rootnode     TYPE REF TO if_ixml_element,
        line_node    TYPE REF TO if_ixml_element,
        node         TYPE REF TO if_ixml_element,
        filter       TYPE REF TO if_ixml_node_filter,
        iterator     TYPE REF TO if_ixml_node_iterator,
        _objtype     TYPE string.

  DATA: trobjtype  TYPE trobjtype,
        trobj_name TYPE trobj_name.

  _objtype = getobjecttype( ).

  xmldoc = ixmldocument.
  rootnode = xmldoc-&gt;find_from_name( _objtype ).

  CALL METHOD getstructurefromattributes
    EXPORTING
      node      = rootnode
    CHANGING
      structure = ls_header.

  IF checkexists( ) EQ abap_true.
    IF overwrite IS INITIAL.
      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;existing.
    ELSE.
*     delete object for new install
      deleteobject( ).
    ENDIF.
  ENDIF.

* retrieve standard text lines
  FREE: filter, iterator, node.
  filter = xmldoc-&gt;create_filter_name( &apos;params&apos; ).
  iterator = xmldoc-&gt;create_iterator_filtered( filter ).
  node ?= iterator-&gt;get_next( ).

  WHILE node IS NOT INITIAL.
    CLEAR line_node.
    CALL METHOD getstructurefromattributes
      EXPORTING
        node      = node
      CHANGING
        structure = ls_params.
    APPEND ls_params TO lt_params.
    node ?= iterator-&gt;get_next( ).
  ENDWHILE.

* Create object
  CASE ls_header-type.
    WHEN &apos;D&apos;. &quot; Dialog

      CALL FUNCTION &apos;SWY_CREATE_DIALOG_TRANSACTION&apos;
        EXPORTING
          new_tcode                     = ls_header-tcode
          text                          = ls_header-ttext
          program                       = ls_header-pgmna
          dynpro                        = ls_header-dypno
          enabled_html                  = ls_header-s_webgui
          enabled_java                  = ls_header-s_platin
          enabled_wingui                = ls_header-s_win32
          devclass                      = devclass
        EXCEPTIONS
          transaction_could_not_created = 1
          OTHERS                        = 2.

      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;system_error.
      ENDIF.

    WHEN &apos;R&apos;. &quot; Report

      CALL FUNCTION &apos;RPY_TRANSACTION_INSERT&apos;
        EXPORTING
          transaction                   = ls_header-tcode
          program                       = ls_header-pgmna
          dynpro                        = ls_header-dypno
          language                      = ls_header-masterlang
          development_class             = devclass
          transaction_type              = &apos;R&apos;
          shorttext                     = ls_header-ttext
          professionel_user_transaction = abap_true
          html_enabled                  = ls_header-s_webgui
          java_enabled                  = ls_header-s_platin
          wingui_enabled                = ls_header-s_win32
        EXCEPTIONS
          cancelled                     = 1
          already_exist                 = 2
          permission_error              = 3
          name_not_allowed              = 4
          name_conflict                 = 5
          illegal_type                  = 6
          object_inconsistent           = 7
          db_access_error               = 8
          OTHERS                        = 9.
      IF sy-subrc &lt;&gt; 0.
        RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;system_error.
      ENDIF.

    WHEN &apos;P&apos;. &quot; Params

      CALL FUNCTION &apos;SWY_CREATE_PARAM_TRANSACTION&apos;
        EXPORTING
          new_tcode                     = ls_header-tcode
          text                          = ls_header-ttext
          called_transaction            = ls_header-tcode_call
          transaction_easy_web          = abap_false
          transaction_complex           = abap_true
          enabled_html                  = ls_header-s_webgui
          enabled_java                  = ls_header-s_platin
          enabled_wingui                = ls_header-s_win32
          parameter                     = lt_params
          devclass                      = devclass
        EXCEPTIONS
          transaction_could_not_created = 1
          OTHERS                        = 2.

      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;system_error.
      ENDIF.

  ENDCASE.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                         |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/

METHOD deleteobject.

*      Plugin created by:
*      Juan Sebastián Soto
*      elsebasoto@gmail.com

  DATA: lv_trobjtype   TYPE trobjtype,
        lv_trobj_name  TYPE trobj_name,
        lv_transaction TYPE tstc-tcode.

  lv_transaction = me-&gt;objname.

  CALL FUNCTION &apos;RPY_TRANSACTION_DELETE&apos;
    EXPORTING
      transaction      = lv_transaction
    EXCEPTIONS
      not_excecuted    = 1
      object_not_found = 2
      OTHERS           = 3.

  IF sy-subrc NE 0.
    RAISE EXCEPTION TYPE zcx_saplink
    EXPORTING
      textid = zcx_saplink=&gt;system_error.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTTYPE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                         |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD getobjecttype.

*      Plugin created by:
*      Juan Sebastián Soto
*      elsebasoto@gmail.com

  objecttype = &apos;TRAN&apos;.  &quot;Table Type

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="GET_TCODE_FROM_PARAM" VERSION="1" LANGU="E" DESCRIPT="Get de TCODE from the TSTCP-PARAM" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="GET_TCODE_FROM_PARAM" SCONAME="IV_PARAM" VERSION="1" LANGU="E" DESCRIPT="Parameters for transactions" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TSTCP-PARAM"/>
   <parameter CLSNAME="ZSAPLINK_TRANSACTIONS" CMPNAME="GET_TCODE_FROM_PARAM" SCONAME="RE_TCODE" VERSION="1" LANGU="E" DESCRIPT="Transaction Code" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TSTC-TCODE"/>
   <source>METHOD GET_TCODE_FROM_PARAM.

  DATA: lv_garbage      TYPE c LENGTH 1,
        lv_params       TYPE c LENGTH 240.

  SPLIT iv_param AT &apos; &apos; INTO lv_params lv_garbage IN CHARACTER MODE.

  re_tcode = lv_params+2.

ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
