<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZSAPLINK_STANDARD_TEXTS">
 <CLAS CLSNAME="ZSAPLINK_STANDARD_TEXTS" VERSION="1" LANGU="E" DESCRIPT="SAPLink Standard Texts Plugin" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZSAPLINK">
  <types CLSNAME="ZSAPLINK_STANDARD_TEXTS" CMPNAME="TY_THEAD" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="5 " SRCCOLUMN1="9 " SRCROW2="37 " SRCCOLUMN2="23 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_thead,
           tdname     TYPE thead-tdname,
           tdobject   TYPE thead-tdobject,
           tdid       TYPE thead-tdid,
           tdspras    TYPE thead-tdspras,
           tdtitle    TYPE thead-tdtitle,
           tdform     TYPE thead-tdform,
           tdstyle    TYPE thead-tdstyle,
           tdversion  TYPE thead-tdversion,
           tdfuser    TYPE thead-tdfuser,
           tdfreles   TYPE thead-tdfreles,
           tdfdate    TYPE thead-tdfdate,
           tdftime    TYPE thead-tdftime,
           tdluser    TYPE thead-tdluser,
           tdlreles   TYPE thead-tdlreles,
           tdldate    TYPE thead-tdldate,
           tdltime    TYPE thead-tdltime,
           tdlinesize TYPE thead-tdlinesize,
           tdtxtlines TYPE thead-tdtxtlines,
           tdhyphenat TYPE thead-tdhyphenat,
           tdospras   TYPE thead-tdospras,
           tdtranstat TYPE thead-tdtranstat,
           tdmacode1  TYPE thead-tdmacode1,
           tdmacode2  TYPE thead-tdmacode2,
           tdrefobj   TYPE thead-tdrefobj,
           tdrefname  TYPE thead-tdrefname,
           tdrefid    TYPE thead-tdrefid,
           tdtexttype TYPE thead-tdtexttype,
           tdcompress TYPE thead-tdcompress,
           mandt      TYPE thead-mandt,
           tdoclass   TYPE thead-tdoclass,
           logsys     TYPE thead-logsys,
         END OF ty_thead
"/>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZSAPLINK_STANDARD_TEXTS" REFCLSNAME="ZSAPLINK" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZSAPLINK_STANDARD_TEXTS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="CHECKEXISTS"/>
   <redefinition CLSNAME="ZSAPLINK_STANDARD_TEXTS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="CREATEIXMLDOCFROMOBJECT"/>
   <redefinition CLSNAME="ZSAPLINK_STANDARD_TEXTS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="CREATEOBJECTFROMIXMLDOC"/>
   <redefinition CLSNAME="ZSAPLINK_STANDARD_TEXTS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="DELETEOBJECT"/>
   <redefinition CLSNAME="ZSAPLINK_STANDARD_TEXTS" REFCLSNAME="ZSAPLINK" VERSION="1" MTDNAME="GETOBJECTTYPE"/>
  </inheritance>
  <method CLSNAME="ZSAPLINK" CMPNAME="CHECKEXISTS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD checkexists.

*      Plugin created by:
*      Juan Sebastián Soto
*      sebastiansoto@freeit.com.ar

  DATA: ls_text_header TYPE thead.

  SPLIT objname AT &apos;,&apos; INTO ls_text_header-tdobject
                            ls_text_header-tdname
                            ls_text_header-tdid
                            ls_text_header-tdspras.

  SELECT SINGLE tdobject
  FROM stxh
  INTO ls_text_header-tdobject
  WHERE tdobject EQ ls_text_header-tdobject
    AND tdname   EQ ls_text_header-tdname
    AND tdid     EQ ls_text_header-tdid
    AND tdspras  EQ ls_text_header-tdspras.

  CHECK sy-subrc EQ 0.

  exists = abap_true.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                              |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD createixmldocfromobject.

*      Plugin created by:
*      Juan Sebastián Soto
*      sebastiansoto@freeit.com.ar

*xml nodes
  DATA: _objtype   TYPE string,
        rootnode    TYPE REF TO if_ixml_element,
        header_node TYPE REF TO if_ixml_element,
        line_node   TYPE REF TO if_ixml_element,
        rc          TYPE sysubrc.

  DATA: ls_text_header      TYPE thead,
        ls_text_header_link TYPE ty_thead, &quot; Same structure like thead but with TDNAME at first field
        lt_text_lines       TYPE STANDARD TABLE OF tline,
        ls_text_line        TYPE tline.

***OBJECT ==&gt; TDOBJECT,TDNAME,TDID,TDSPRAS

  SPLIT objname AT &apos;,&apos; INTO ls_text_header-tdobject
                            ls_text_header-tdname
                            ls_text_header-tdid
                            ls_text_header-tdspras.

  CALL FUNCTION &apos;READ_TEXT&apos;
    EXPORTING
      id                      = ls_text_header-tdid
      language                = ls_text_header-tdspras
      name                    = ls_text_header-tdname
      object                  = ls_text_header-tdobject
    IMPORTING
      header                  = ls_text_header
    TABLES
      lines                   = lt_text_lines
    EXCEPTIONS
      id                      = 1
      language                = 2
      name                    = 3
      not_found               = 4
      object                  = 5
      reference_check         = 6
      wrong_access_to_archive = 7
      OTHERS                  = 8.
  IF sy-subrc &lt;&gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  MOVE-CORRESPONDING ls_text_header TO ls_text_header_link.

* Create parent node
  _objtype = getobjecttype( ).
  rootnode = xmldoc-&gt;create_element( _objtype ).
  setattributesfromstructure( node = rootnode structure = ls_text_header_link ).

* Create lines node
  LOOP AT lt_text_lines INTO ls_text_line.
    line_node = xmldoc-&gt;create_element( &apos;line&apos; ).
    setattributesfromstructure( node = line_node structure = ls_text_line ).
    rc = rootnode-&gt;append_child( line_node ).
  ENDLOOP.

*\--------------------------------------------------------------------/
  rc = xmldoc-&gt;append_child( rootnode ).
  ixmldocument = xmldoc.


ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                              |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD createobjectfromixmldoc.

*      Plugin created by:
*      Juan Sebastián Soto
*      sebastiansoto@freeit.com.ar

  DATA: ls_text_header TYPE thead,
        ls_text_line   TYPE tline,
        lt_text_lines  TYPE STANDARD TABLE OF tline.

*xml nodes
  DATA: rootnode     TYPE REF TO if_ixml_element,
        line_node    TYPE REF TO if_ixml_element,
        node         TYPE REF TO if_ixml_element,
        filter       TYPE REF TO if_ixml_node_filter,
        iterator     TYPE REF TO if_ixml_node_iterator,
        _objtype     TYPE string.

  DATA: trobjtype  TYPE trobjtype,
        trobj_name TYPE trobj_name.

  _objtype = getobjecttype( ).

  xmldoc = ixmldocument.
  rootnode = xmldoc-&gt;find_from_name( _objtype ).

  CALL METHOD getstructurefromattributes
    EXPORTING
      node      = rootnode
    CHANGING
      structure = ls_text_header.

***OBJECT ==&gt; TDOBJECT,TDNAME,TDID,TDSPRAS

  CONCATENATE ls_text_header-tdobject
              ls_text_header-tdname
              ls_text_header-tdid
              ls_text_header-tdspras
  INTO objname
  SEPARATED BY &apos;,&apos;.

  IF checkexists( ) EQ abap_true.
    IF overwrite IS INITIAL.
      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;existing.
    ELSE.
*     delete object for new install
      deleteobject( ).
    ENDIF.
  ENDIF.

* retrieve standard text lines
  FREE: filter, iterator, node.
  filter = xmldoc-&gt;create_filter_name( &apos;line&apos; ).
  iterator = xmldoc-&gt;create_iterator_filtered( filter ).
  node ?= iterator-&gt;get_next( ).

  WHILE node IS NOT INITIAL.
    CLEAR line_node.
    CALL METHOD getstructurefromattributes
      EXPORTING
        node      = node
      CHANGING
        structure = ls_text_line.
    APPEND ls_text_line TO lt_text_lines.
    node ?= iterator-&gt;get_next( ).
  ENDWHILE.

  CALL FUNCTION &apos;SAVE_TEXT&apos;
    EXPORTING
      header          = ls_text_header
      savemode_direct = abap_true
    TABLES
      lines           = lt_text_lines
    EXCEPTIONS
      id              = 1
      language        = 2
      name            = 3
      object          = 4
      OTHERS          = 5.

  IF sy-subrc NE 0.
    RAISE EXCEPTION TYPE zcx_saplink
    EXPORTING
      textid = zcx_saplink=&gt;system_error.
  ENDIF.

  trobjtype  = _objtype.
  trobj_name = objname.

  CALL FUNCTION &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = trobjtype
      obj_name          = trobj_name
    EXCEPTIONS
      wrong_object_name = 1.

  name = objname.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD deleteobject.

*      Plugin created by:
*      Juan Sebastián Soto
*      elsebasoto@gmail.com

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTTYPE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*| This file is part of SAPlink.                                       |
*|                                                                     |
*| Copyright 2014-2015 SAPlink project members                              |
*|                                                                     |
*| Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     |
*| you may not use this file except in compliance with the License.    |
*| You may obtain a copy of the License at                             |
*|                                                                     |
*|     http://www.apache.org/licenses/LICENSE-2.0                      |
*|                                                                     |
*| Unless required by applicable law or agreed to in writing, software |
*| distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   |
*| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     |
*| implied.                                                            |
*| See the License for the specific language governing permissions and |
*| limitations under the License.                                      |
*\---------------------------------------------------------------------/
METHOD getobjecttype.

*      Plugin created by:
*      Juan Sebastián Soto
*      elsebasoto@gmail.com

  objecttype = &apos;TEXT&apos;.  &quot;Table Type

ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
